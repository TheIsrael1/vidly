{"version":3,"sources":["services/logService.js","services/httpServices.js","services/authService.js","components/common/protectedRoute.jsx","components/common/pagination .jsx","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/moviesTable.jsx","services/movieServices.js","services/genreService.js","utils/pagination.js","components/common/listGroup.jsx","components/common/searchBox.jsx","components/movies.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navBar.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/loginForm.jsx","components/logout.jsx","services/userService.js","components/registerForm.jsx","App.js","serviceWorker.js","index.js"],"names":["init","Sentry","dsn","maxBreadcrumbs","debug","log","error","axios","defaults","baseURL","process","REACT_APPP_API_URL","interceptors","response","use","status","console","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","email","password","a","http","data","localStorage","setItem","getJwt","getItem","login","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","ProtectedRoute","path","Component","component","render","rest","Route","props","auth","Redirect","to","pathname","state","from","location","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","_","range","className","map","page","key","onClick","Like","classes","liked","style","cursor","aria-hidden","TableHeader","raiseSort","sortColumn","order","onSort","renderSortIcon","column","this","columns","label","TableBody","renderCell","item","content","createKey","_id","Table","MoviesTable","movie","Link","title","onLike","deleteColumn","onDelete","user","isAdmin","push","movies","movieUrl","id","getMovie","movieId","saveMovie","body","deleteMovie","getGenres","paginate","items","pageNumber","startIndex","slice","take","value","ListGroup","textProperty","valueProperty","onItemSelect","selectedItem","defaultProps","SearchBox","onChange","type","name","placeholder","e","currentTarget","Movies","genres","searchQuery","selectedGenre","handleGenreSelect","genre","setState","handleSearch","query","handleDelete","originalMovies","filter","m","handlePageChange","handleLike","index","indexOf","handleSort","getPageData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","marginBottom","marginTop","Customers","Rentals","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","Fragment","Input","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","renderButton","disabled","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","min","max","history","match","params","mapToViewModel","replace","populateGenres","populateMovies","onSubmit","renderInput","renderSelect","LoginForm","username","window","Logout","register","RegisterForm","App","Switch","exact","Boolean","hostname","REACT_APP_NAME","ReactDOM","StrictMode","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.139ddb4e.chunk.js","sourcesContent":["import * as Sentry from \"@sentry/react\";\r\n\r\nfunction init(){\r\n Sentry.init({\r\n  dsn: \"https://examplePublicKey@o0.ingest.sentry.io/0\",\r\n  maxBreadcrumbs: 50,\r\n  debug: true,\r\n });\r\n\r\n}\r\n\r\nfunction log(error){\r\n Sentry.captureException(error);\r\n}\r\n\r\nexport default {\r\n init,\r\n log\r\n}","import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport logger from \"./logService\"\r\n\r\n\r\naxios.defaults.baseURL = process.env.REACT_APPP_API_URL;\r\n\r\naxios.interceptors.response.use(null, error =>{\r\n const expectedError = error.response && error.response.status >=400 && error.response.status < 500;\r\n\r\n if(!expectedError){\r\n   \r\n  \r\n   console.log('loggin the error', error);  \r\n   logger.log(error)\r\n   toast('an unexpected error occured');\r\n }\r\n   \r\n return Promise.reject(error);\r\n\r\n});\r\n\r\nfunction setJwt(jwt){\r\n  axios.defaults.headers.common['x-auth-token'] =jwt;\r\n\r\n}\r\n\r\nexport default{\r\n get: axios.get,\r\n post: axios.post,\r\n put: axios.put,\r\n delete: axios.delete,\r\n setJwt\r\n};","import jwtDecode from 'jwt-decode';\r\nimport http from './httpServices'\r\n\r\n\r\nconst apiEndPoint =\"/auth\";\r\nconst tokenKey = \"token\";\r\n\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password){\r\n const{data: jwt} = await http.post(apiEndPoint, {email, password});\r\n localStorage.setItem(tokenKey, jwt);\r\n\r\n}\r\n\r\n export function loginWithJwt(jwt) {\r\n  localStorage.setItem(\"token\", jwt);\r\n }\r\n\r\n\r\nexport function logout(){\r\n localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser(){\r\n try {\r\n  const jwt = localStorage.getItem(tokenKey);\r\n   const user =jwtDecode(jwt);\r\n   return user;\r\n  \r\n} catch (ex) {\r\n return null;\r\n}\r\n}\r\n\r\nexport function getJwt(){\r\n return localStorage.getItem(tokenKey);\r\n}\r\nexport default{\r\n login,\r\n loginWithJwt,\r\n logout,\r\n getCurrentUser,\r\n getJwt\r\n};","import React from 'react';\r\nimport { Route,Redirect } from 'react-router-dom';\r\nimport auth from '../../services/authService';\r\n\r\nconst ProtectedRoute = ({path, component: Component, render, ...rest}) => {\r\n return ( \r\n  <Route \r\n            {...rest} render ={props => {\r\n         \r\n\r\n              if(!auth.getCurrentUser()) return <Redirect to={{\r\n               pathname: '/login',\r\n               state: {from: props.location}\r\n              }}/>;\r\n              return Component ? <Component {...props}/> : render(props);\r\n            }}/>\r\n  );\r\n}\r\n \r\nexport default ProtectedRoute;","import React from 'react';\r\nimport _ from 'lodash';\r\nimport propTypes from 'prop-types';\r\n\r\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\r\n\r\n\r\n\r\n\r\n const pagesCount = Math.ceil(itemsCount / pageSize);\r\n if (pagesCount === 1) return null;\r\n const pages = _.range(1, pagesCount + 1);\r\n\r\n return (\r\n  <nav>\r\n   <ul className=\"pagination\">\r\n    {pages.map(page => (<li key={page} className={page === currentPage ? \"page-item active\" : \"page-item\"}><a className=\"page-link\" onClick={() => onPageChange(page)}>{page}</a></li>)\r\n    )}\r\n   </ul>\r\n  </nav>\r\n\r\n );\r\n};\r\n\r\nPagination.propTypes = {\r\n\r\n itemsCount: propTypes.number.isRequired,\r\n pageSize: propTypes.number.isRequired,\r\n currentPage: propTypes.number.isRequired,\r\n onPageChange: propTypes.func.isRequired\r\n\r\n}\r\n\r\nexport default Pagination;","import React, { Component } from 'react';\r\n\r\n\r\nconst Like = (props) => {\r\n let classes = \"fa fa-heart\";\r\n if (!props.liked) classes += \"-o\";\r\n return (\r\n  <i onClick={props.onClick} style={{ cursor: \"pointer\" }} className={classes} aria-hidden=\"true\"></i>\r\n );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Like;","import React, { Component } from 'react';\r\n\r\nclass TableHeader extends Component {\r\n\r\n raiseSort = path => {\r\n\r\n  const sortColumn = { ...this.props.sortColumn };\r\n  if (sortColumn.path === path) {\r\n   sortColumn.order = (sortColumn.order === \"asc\") ? \"desc\" : \"asc\";\r\n  }\r\n  else {\r\n   sortColumn.path = path;\r\n   sortColumn.order = \"asc\";\r\n  }\r\n  this.props.onSort(sortColumn);\r\n }\r\n\r\n renderSortIcon = column => {\r\n  const { sortColumn } = this.props;\r\n  if (column.path !== sortColumn.path) return null;\r\n\r\n  if (sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\"></i>\r\n  return <i className=\"fa fa-sort-desc\"></i>;\r\n\r\n };\r\n\r\n render() {\r\n  return (\r\n   <thead>\r\n    <tr>\r\n     {this.props.columns.map(column => <th className=\"clickable\" key={column.path || column.key} onClick={() => this.raiseSort(column.path)} >{column.label} {this.renderSortIcon(column)}</th>)}\r\n    </tr>\r\n   </thead>\r\n  );\r\n }\r\n}\r\n\r\nexport default TableHeader;","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\n\r\nclass TableBody extends Component {\r\n\r\n renderCell = (item, column) => {\r\n\r\n  if (column.content) return column.content(item);\r\n\r\n  return _.get(item, column.path);\r\n\r\n }\r\n\r\n createKey = (item, column) => {\r\n  return item._id + (column.path || column.key);\r\n }\r\n 666\r\n\r\n render() {\r\n\r\n  const { data, columns } = this.props;\r\n  return (\r\n\r\n   <tbody>\r\n    {data.map(item => <tr key={item._id}>\r\n     {columns.map(column => <td key={this.createKey(item, column)}>{this.renderCell(item, column)}</td>)}\r\n    </tr>)}\r\n   </tbody>\r\n  );\r\n }\r\n}\r\n\r\nexport default TableBody;","import React from 'react';\r\nimport TableHeader from './tableHeader';\r\nimport TableBody from './tableBody';\r\n\r\nconst Table = ({ columns, sortColumn, onSort, data }) => {\r\n\r\n return (\r\n  <table className=\"table\">\r\n   <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n   <TableBody data={data} columns={columns} />\r\n\r\n  </table>\r\n );\r\n}\r\n\r\nexport default Table;","import React, { Component } from 'react';\r\nimport auth from '../services/authService';\r\nimport Like from './common/like'\r\nimport Table from './common/table'\r\nimport { Link } from 'react-router-dom'\r\nclass MoviesTable extends Component {\r\n\r\n\r\n\r\n  columns = [\r\n    { path: 'title', label: 'Title', content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link> },\r\n    { path: 'genre.name', label: 'Genre' },\r\n    { path: 'numberInStock', label: 'Stock' },\r\n    { path: 'dailyRentalRate', label: 'Rate' },\r\n    {\r\n      key: 'like', content:\r\n        movie => (<Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />)\r\n    },\r\n    \r\n  ]\r\n\r\n  deleteColumn= {\r\n    \r\n      key: 'delete', \r\n      content:\r\n       movie => (<button onClick={() => this.props.onDelete(movie)} className=\"btn btn-danger btn-sm\">\r\n          \r\n        Delete</button>)\r\n    };\r\n\r\n  \r\n  constructor(){\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n    if (user && user.isAdmin)\r\n      this.columns.push(this.deleteColumn);\r\n  }\r\n\r\n  render() {\r\n    const { movies, onSort, sortColumn } = this.props;\r\n\r\n    return (\r\n      <Table columns={this.columns} data={movies} onSort={onSort} sortColumn={sortColumn} />\r\n    );\r\n\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default MoviesTable;","import http from './httpServices'\r\n\r\n\r\nconst apiEndPoint =\"/movies\";\r\n\r\nfunction movieUrl(id){\r\nreturn `${apiEndPoint}/${id}`;\r\n}\r\n\r\nexport function getMovies(){\r\n  return http.get(apiEndPoint);\r\n}\r\n\r\nexport function getMovie(movieId){\r\n return http.get(movieUrl(movieId));\r\n}\r\n\r\nexport function saveMovie(movie){\r\n if(movie._id){\r\n  const body ={...movie};\r\n  delete body._id;\r\n  return http.put(movieUrl(movie._id), body);\r\n }\r\n \r\n return http.post(apiEndPoint, movie)\r\n}\r\n\r\nexport function deleteMovie(movieId){\r\n return http.delete(movieUrl(movieId));\r\n}","import http from './httpServices';\r\n\r\n\r\nexport function getGenres() {\r\n\r\nreturn http.get( \"/genres\");\r\n}\r\n\r\n","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n\r\n const startIndex = (pageNumber - 1) * pageSize;\r\n return _(items).slice(startIndex).take(pageSize).value();\r\n\r\n\r\n}","import React from 'react';\r\n\r\n\r\nconst ListGroup = ({ items, textProperty, valueProperty, onItemSelect, selectedItem }) => {\r\n\r\n\r\n\r\n return (\r\n  <ul className=\"list-group\">\r\n   {items.map(item => (<li key={item[valueProperty]} onClick={() => onItemSelect(item)} className={item === selectedItem ? \"list-group-item active\" : \"list-group-item\"} style={{ cursor: \"pointer\" }}>{item[textProperty]}</li>))}\r\n  </ul>\r\n )\r\n\r\n};\r\n\r\nListGroup.defaultProps = {\r\n textProperty: \"name\",\r\n valueProperty: \"_id\"\r\n};\r\n\r\nexport default ListGroup;","import React from 'react';\r\n\r\n\r\nconst SearchBox = ({value, onChange}) => {\r\n return ( \r\n  <input type=\"text\"\r\n  name=\"query\"\r\n  className=\"form-control my-3\"\r\n  placeholder=\"Search...\"\r\n  value={value}\r\n  onChange={e => onChange(e.currentTarget.value)}\r\n  />\r\n\r\n  );\r\n}\r\n \r\nexport default SearchBox;\r\n\r\n\r\n \r\n","import React, { Component } from 'react';\r\nimport Pagination from './common/pagination ';\r\nimport MoviesTable from './moviesTable';\r\nimport  {toast}  from 'react-toastify';\r\nimport { getMovies, deleteMovie } from '../services/movieServices';\r\nimport { getGenres } from '../services/genreService';\r\nimport { paginate } from '../utils/pagination';\r\nimport ListGroup from './common/listGroup';\r\nimport _ from 'lodash';\r\nimport { Link } from 'react-router-dom';\r\nimport SearchBox from './common/searchBox';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\nclass Movies extends Component {\r\n state = {\r\n  movies: [],\r\n  genres: [],\r\n  searchQuery: \"\",\r\n  selectedGenre: null,\r\n  pageSize: 4,\r\n  currentPage: 1,\r\n  sortColumn: { path: 'title', order: 'asc' }\r\n }\r\n\r\n async componentDidMount () {\r\n\r\n   const {data} = await getGenres();\r\n  const genres = [{ _id: \"\", name: \"All\" }, ...data]\r\n\r\n  const {data: movies} = await getMovies();\r\n  this.setState({ movies, genres });\r\n\r\n }\r\n\r\n handleGenreSelect = genre => {\r\n  this.setState({ selectedGenre: genre, searchQuery:\"\", currentPage: 1 });\r\n\r\n }\r\n\r\n handleSearch = query =>{\r\n  this.setState({searchQuery: query, selectedGenre: null, currentPage: 1});\r\n }\r\n\r\n\r\n handleDelete = async (movie) => {\r\n   const originalMovies = this.state.movies;\r\n  const movies = originalMovies.filter(m => m._id !== movie._id);\r\n  this.setState({ movies });\r\ntry{\r\n  await deleteMovie(movie._id);\r\n}\r\ncatch(ex){\r\n  if (ex.response && ex.response.status === 400)\r\n    toast('This movie has already been deleted');\r\n\r\n    this.setState({movies: originalMovies})\r\n}\r\n\r\n }\r\n\r\n handlePageChange = (page) => {\r\n\r\n  this.setState({ currentPage: page });\r\n\r\n }\r\n\r\n handleLike = (movie) => {\r\n  const movies = [...this.state.movies];\r\n  const index = movies.indexOf(movie);\r\n  movies[index] = { ...movies[index] };\r\n  movies[index].liked = !movies[index].liked;\r\n\r\n  this.setState({ movies });\r\n\r\n }\r\n\r\n handleSort = sortColumn => {\r\n  this.setState({ sortColumn });\r\n\r\n }\r\n\r\n getPageData = () => {\r\n  const { movies: allMovies, currentPage, pageSize, selectedGenre, sortColumn, searchQuery } = this.state;\r\n\r\n\r\n  let filtered = allMovies;\r\n  if(searchQuery)\r\n    filtered = allMovies.filter(m => m.title.toLowerCase().startsWith(searchQuery.toLowerCase()));\r\n  else if(selectedGenre && selectedGenre._id)\r\n    filtered= allMovies.filter(m => m.genre._id === selectedGenre._id);\r\n\r\n  const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order])\r\n\r\n\r\n  const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n  return { totalCount: filtered.length, data: movies }\r\n\r\n }\r\n\r\n\r\n render() {\r\n  const { length: count } = this.state.movies;\r\n  const { currentPage, pageSize, sortColumn,searchQuery } = this.state;\r\n  const {user} = this.props;\r\n\r\n  \r\n\r\n  const { totalCount, data: movies } = this.getPageData();\r\n\r\n  return (\r\n   <div className=\"row\">\r\n    <div className=\"col-3\">\r\n     <ListGroup items={this.state.genres} selectedItem={this.state.selectedGenre} onItemSelect={this.handleGenreSelect} />\r\n    </div>\r\n    <div className=\"col \">\r\n    {user && <Link to=\"/movies/new\" className=\"btn btn-primary\" style={{ marginBottom: 20, marginTop: 10 }}>New Movie</Link>}\r\n     <p> There are {totalCount} movies in the database </p>\r\n     <SearchBox value={searchQuery} onChange={this.handleSearch}/>\r\n     <MoviesTable movies={movies} sortColumn={sortColumn} onLike={this.handleLike} onDelete={this.handleDelete} onSort={this.handleSort} />\r\n\r\n     <Pagination itemsCount={totalCount} currentPage={currentPage} pageSize={pageSize} onPageChange={this.handlePageChange} />\r\n    </div>\r\n   </div>\r\n\r\n\r\n  );\r\n }\r\n}\r\n\r\nexport default Movies;","import React from 'react';\r\n\r\nconst Customers = () => {\r\n return (\r\n  <h1>customers</h1>\r\n );\r\n}\r\n\r\nexport default Customers;","import React from 'react';\r\n\r\nconst Rentals = () => {\r\n return (<h1>rentals</h1>);\r\n}\r\n\r\nexport default Rentals;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n return (\r\n  <h1>Not Found</h1>\r\n );\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nconst NavBar = ({user}) => {\r\n return (\r\n  <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n   <Link className=\"navbar-brand\" to=\"/\">Vidly</Link>\r\n   <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\"\r\n    aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n   </button>\r\n   <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n    <div className=\"navbar-nav\">\r\n     <NavLink to=\"/movies\" className=\"nav-item nav-link\">Movies </NavLink>\r\n     <NavLink to=\"/customers\" className=\"nav-item nav-link\">Customers</NavLink>\r\n     <NavLink to=\"/rentals\" className=\"nav-item nav-link\">Rentals</NavLink>\r\n     {!user && \r\n     <React.Fragment><NavLink to=\"/login\" className=\"nav-item nav-link\">Login</NavLink>\r\n     <NavLink to=\"/register\" className=\"nav-item nav-link\">Register</NavLink></React.Fragment>}\r\n     {user && \r\n     <React.Fragment><NavLink to=\"/profile\" className=\"nav-item nav-link\">{user.name}</NavLink>\r\n     <NavLink to=\"/logout\" className=\"nav-item nav-link\">Logout</NavLink></React.Fragment>}\r\n     \r\n    </div>\r\n   </div>\r\n  </nav>\r\n );\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n return (<div className=\"form-group\"><label htmlFor={name}>{label}</label><input {...rest} name={name} id={name} className=\"form-control\" />\r\n  {error && <div className=\"alert alert-danger\">{error}</div>}\r\n </div>);\r\n}\r\n\r\nexport default Input\r\n ;","import React from 'react';\r\n\r\nconst Select = ({name, label, options, error, ...rest}) => {\r\n return (\r\n  <div className=\"form-group\">\r\n   <label htmlFor={name}>{label}</label>\r\n   <select name={name} id={name} {...rest} className=\"form-control\">\r\n   <option value=\"\" />\r\n   {options.map(option => (\r\n    <option value={option._id} key={option._id}> {option.name}</option>\r\n   ))}\r\n   </select>\r\n  </div>\r\n   );\r\n};\r\n \r\nexport default Select;","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Input from '../common/input';\r\nimport Select from '../common/select';\r\n\r\n\r\nclass Form extends Component {\r\n state = {\r\n  data: {},\r\n  errors: {}\r\n\r\n };\r\n\r\n validate = () => {\r\n  const options = { abortEarly: false };\r\n  const { error } = Joi.validate(this.state.data, this.schema, options);\r\n  if (!error) return null;\r\n\r\n  const errors = {};\r\n  for (let item of error.details)\r\n   errors[item.path[0]] = item.message;\r\n  return errors;\r\n\r\n }\r\n\r\n validateProperty = ({ name, value }) => {\r\n  const obj = { [name]: value };// --name: computed values es6, whatever name is at runtime will be used to set that key\r\n  const schema = { [name]: this.schema[name] };\r\n  const { error } = Joi.validate(obj, schema)\r\n  return error ? error.details[0].message : null;\r\n }\r\n\r\n handleSubmit = e => {\r\n  e.preventDefault();\r\n\r\n  const errors = this.validate();\r\n  this.setState({ errors: errors || {} });\r\n  if (errors) return;\r\n\r\n  this.doSubmit();\r\n }\r\n\r\n handleChange = ({ currentTarget: input }) => {\r\n  const errors = { ...this.state.errors };\r\n\r\n  const errorMessage = this.validateProperty(input);\r\n  if (errorMessage) errors[input.name] = errorMessage;\r\n  else delete errors[input.name];\r\n\r\n  const data = { ...this.state.data };\r\n  data[input.name] = input.value;\r\n  this.setState({ data, errors });\r\n\r\n }\r\n\r\n renderButton = label => {\r\n  return <button disabled={this.validate()} className=\"btn btn-primary\">{label}</button>\r\n }\r\n\r\n renderSelect(name, label, options){\r\n  const{data, errors} = this.state;\r\n\r\n  return(\r\n   <Select name={name}\r\n   value={data[name]}\r\n   label={label}\r\n   options={options}\r\n   onChange={this.handleChange}\r\n   error={errors[name]}\r\n   />\r\n  )\r\n }\r\n\r\n\r\n renderInput(name, label) {\r\n  const { data, errors, type = 'text' } = this.state;\r\n\r\n  return (\r\n   <Input type={type} name={name} value={data[name]} label={label} onChange={this.handleChange} error={errors[name]} />\r\n  )\r\n }\r\n\r\n\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport  Joi  from 'joi-browser';\r\nimport Form from './common/form';\r\nimport { getMovie, saveMovie } from '../services/movieServices';\r\nimport { getGenres } from '../services/genreService';\r\n\r\n\r\n\r\nclass MovieForm extends Form {\r\n    state = { \r\n        data:{\r\n            title: \"\",\r\n            genreId:\"\",\r\n            numberInStock:\"\",\r\n            dailyRentalRate:\"\"\r\n        },\r\n        genres:[],\r\n        errors:{}\r\n     };\r\n\r\n     schema = {\r\n         _id: Joi.string(),\r\n         title: Joi.string().required().label(\"Title\"),\r\n         genreId: Joi.string().required().label(\"Genre\"),\r\n         numberInStock: Joi.string().required().min(0).max(100).label(\"Number In Stock\"),\r\n         dailyRentalRate: Joi.string().required().min(0).max(5).label(\"Title\"),\r\n\r\n     }\r\n\r\n     async populateGenres(){\r\n         const {data: genres} = await getGenres();\r\n         this.setState({genres});\r\n     }\r\n\r\n     async populateMovies(){\r\n\r\n         try{\r\n             const movieId = this.props.match.params.id;\r\n             if(movieId === \"new\") return;\r\n             const {data: movie} = await getMovie(movieId);\r\n             this.setState({data: this.mapToViewModel(movie)});\r\n         }\r\n         catch(ex){\r\n             if(ex.response && ex.response.status === 404)\r\n            this.props.history.replace(\"/not-found\");\r\n         }\r\n     }\r\n\r\n     async componentDidMount (){\r\n        await this.populateGenres(); \r\n\r\n        await this.populateMovies();\r\n     }\r\n\r\n     mapToViewModel(movie){\r\n         return{\r\n             _id: movie._id,\r\n             title: movie.title,\r\n             genreId: movie.genre._id,\r\n             numberInStock: movie.numberInStock,\r\n             dailyRentalRate: movie.dailyRentalRate\r\n         }\r\n     }\r\n\r\n     doSubmit = async ()=>{\r\n         await saveMovie(this.state.data);\r\n\r\n         this.props.history.push(\"/movies\");\r\n     }\r\n\r\n\r\n\r\n    render() { \r\n        return(\r\n            <div>\r\n            <h1>Movie Form</h1>\r\n            <form onSubmit={this.handleSubmit}>\r\n             {this.renderInput(\"title\", \"Title\")}\r\n             {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n             {this.renderInput(\"numberInStock\", \"Number In Stock\", \"number\")}\r\n             {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n             {this.renderButton(\"Save\")}\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default MovieForm;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport auth from '../services/authService';\r\n\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {}\r\n\r\n  }\r\n\r\n  schema = {\r\n    username: Joi.string().required().label(\"Username\"),\r\n    password: Joi.string().required().label(\"Password\")\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const {data} =this.state;\r\n      await auth.login(data.username, data.password);\r\n      \r\n      const {state} = this.props.location;\r\n      window.location = state ? state.from.pathname : '/';\r\n    } catch (ex) {\r\n        if(ex.response && ex.response.status === 400){\r\n          const errors = {...this.state.errors};\r\n          errors.username = ex.response.data;\r\n          this.setState({ errors });\r\n        }\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n \r\n    if (auth.getCurrentUser()) return <Redirect to='/'/>;\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.handleSubmit} >\r\n          {this.renderInput('username', 'Username')}\r\n          {this.renderInput('password', 'Password', \"password\")}\r\n          {this.renderButton(\"Login\")}\r\n\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;","import React, { Component } from 'react';\r\nimport auth from '../services/authService';\r\n\r\nclass Logout extends Component {\r\n \r\n componentDidMount(){\r\n  auth.logout();\r\n  window.location = \"/\";\r\n }\r\n render() { \r\n  return null\r\n }\r\n}\r\n \r\nexport default Logout;","import http from './httpServices'\r\n\r\n\r\nconst apiEndPoint = \"/users\";\r\n\r\nexport function register(user){\r\n return http.post(apiEndPoint,{\r\n  email: user.username,\r\n  password: user.password,\r\n  name: user.name\r\n });\r\n}","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport {register} from '../services/userService';\r\nimport auth from '../services/authService' \r\n\r\n\r\nclass RegisterForm extends Form {\r\n state = {\r\n  data: { username: \"\", password: \"\", name: \"\" },\r\n  errors: {}\r\n }\r\n\r\n schema = {\r\n  username: Joi.string().email().required().label(\"Username\"),\r\n  password: Joi.string().min(5).required().label(\"Password\"),\r\n  name: Joi.string().required().label(\"Name\")\r\n }\r\n\r\n doSubmit = async() => {\r\n  try{\r\n    const response = await register(this.state.data);\r\n    auth.loginWithJwt( response.headers['x-auth-token']);\r\n    window.location = '/';\r\n   }\r\n   catch(ex){\r\n     if (ex.response && ex.response.status === 400){\r\n      const errors = {...this.state.errors};\r\n      errors.username = ex.response.data;\r\n      this.setState({errors})\r\n     }\r\n   }\r\n }\r\n\r\n render() {\r\n  return (<div>\r\n   <h1>Register</h1>\r\n   <form onSubmit={this.handleSubmit}>\r\n    {this.renderInput('username', 'Username')}\r\n    {this.renderInput('password', 'Password', \"password\")}\r\n    {this.renderInput('name', 'Name')}\r\n    {this.renderButton(\"Register\")}\r\n   </form>\r\n  </div>);\r\n }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport ProtectedRoute from './components/common/protectedRoute';\nimport Movies from './components/movies';\nimport Customers from './components/customers';\nimport Rentals from './components/rentals';\nimport NotFound from './components/notFound';\nimport NavBar from './components/navBar';\nimport MovieForm from './components/movieForm';\nimport LoginForm from './components/loginForm'\nimport Logout from './components/logout';\nimport auth from './services/authService'\nimport RegisterForm from './components/registerForm';\nimport './App.css';\n\n\n\nclass App extends Component {\n  state = {\n\n  }\n\n  componentDidMount(){\n  const user = auth.getCurrentUser();\n  this.setState({user});\n  }\n\n  render() {\n\n    const {user} = this.state;\n    return (\n      <main className=\"container\">\n        <React.Fragment>\n          <ToastContainer />\n          <NavBar user={user}/>\n          <Switch>\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <ProtectedRoute \n            path=\"/movies/:id\" component={MovieForm}/>\n            <Route path=\"/movies\" render ={props => <Movies {...props} user={this.state.user}/>}></Route>\n            <Route path=\"/customers\" component={Customers}></Route>\n            <Route path=\"/rentals\" component={Rentals}></Route>\n            <Route path=\"/not-found\" component={NotFound}></Route>\n            <Redirect from='/' exact to='/movies' />\n            <Redirect to='not-found' />\n          </Switch>\n        </React.Fragment>\n        </ main>\n\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport logger from './services/logService'\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\nconsole.log(\"SUPERMAN\",process.env.REACT_APP_NAME);\nlogger.init();\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}